function numberWithSpaces(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}const curveEnergyType={consumption:{title:"Annual oil consumption (TWh)",unit:"TWh",legend_simple:"Consumption",curveColor:"#2a5c9d"},production:{title:"Annual oil production (TWh)",unit:"TWh",legend_simple:"Production",curveColor:"#238358"},reserves:{title:"Annual oil reserves (Million Barrels)",unit:"Million Barrels",legend_simple:"Reserves",curveColor:"#dc7830"}},curveTitle=document.querySelector("#curve-title"),curveSvg=document.querySelector("#curve-chart");let consumptionPoints=[],productionPoints=[],reservesPoints=[];function calculateValues(){consumptionPoints=[],productionPoints=[],reservesPoints=[];for(const[e,t]of Object.entries(data)){let n=0,r=0,o=0;for(const[e,s]of Object.entries(t))(selectedCountries.includes(e)||0===selectedCountries.length)&&(n+=s.production?s.production:0,r+=s.consumption?s.consumption:0,o+=s.reserves?s.reserves:0);0==o&&(o=null),0==n&&(n=null),0==r&&(r=null),0!=Math.round(r)&&consumptionPoints.push({xpoint:parseInt(e.substring(1)),ypoint:parseFloat(r.toFixed(2))}),0!=Math.round(n)&&productionPoints.push({xpoint:parseInt(e.substring(1)),ypoint:parseFloat(n.toFixed(2))}),0!=Math.round(o)&&reservesPoints.push({xpoint:parseInt(e.substring(1)),ypoint:parseFloat(o.toFixed(2))})}}function drawChart(e){const t=d3.select(document.getElementById("curve-chart"));t.selectAll("*").remove();var n=d3.scaleTime().domain(d3.extent(e,(function(e){return new Date(e.xpoint,0,1)}))).range([20,width-50]);t.append("g").attr("transform",`translate(30, ${height/2-24})`).call(d3.axisBottom(n));var r=d3.scaleLinear().domain([d3.min(e,(function(e){return e.ypoint})),d3.max(e,(function(e){return e.ypoint}))]).range([height/2-24,0]);const o=d3.axisLeft(r);o.tickFormat(d3.format(".0f")),t.append("g").attr("transform","translate(50,0)").call(o);var s=d3.line().x((e=>n(new Date(e.xpoint,0,1)))).y((e=>r(e.ypoint)));t.append("path").datum(e).attr("fill","none").attr("transform","translate(30,0)").attr("stroke",curveEnergyType[selectedEnergyType].curveColor).attr("stroke-width",2).attr("d",s),t.append("g").selectAll("dot").data(e).enter().append("circle").attr("cx",(function(e){return n(new Date(e.xpoint,0,1))})).attr("cy",(function(e){return r(e.ypoint)})).attr("r",5).attr("transform","translate(30,0)").attr("fill",curveEnergyType[selectedEnergyType].curveColor).on("mouseover",(e=>{const n=e.xpoint;let r=e.ypoint;const o=`Year: ${n}\r\n\n                ${curveEnergyType[selectedEnergyType].legend_simple}: ${r} ${curveEnergyType[selectedEnergyType].unit}\n            `;tooltip.text(o).style("left",d3.event.pageX+15+"px").style("top",d3.event.pageY-100+"px").transition().duration(400).style("opacity",1).style("display","block").style("background-color","white").style("border","1px solid black").style("padding","5px").style("border-radius","5px").style("pointer-events","none"),t.selectAll("circle").filter((function(e){return e.xpoint==n})).attr("r",10)})).on("mouseleave",(e=>{tooltip.transition().duration(300).style("opacity",0),t.selectAll("circle").filter((function(t){return t.xpoint==e.xpoint})).attr("r",5)})),curveSvg.style.overflow="visible"}function curveReady(e){curveTitle.innerText=curveEnergyType[selectedEnergyType].title,calculateValues(),drawChart(consumptionPoints,"consumption");for(let e=0;e<energyBtn.length;e++)energyBtn[e].addEventListener("click",(()=>{selectedEnergyType=energyBtn[e].getAttribute("energy-type"),calculateValues(),curveTitle.innerText=curveEnergyType[selectedEnergyType].title,"consumption"===selectedEnergyType?drawChart(consumptionPoints,selectedEnergyType):"production"===selectedEnergyType?drawChart(productionPoints,selectedEnergyType):drawChart(reservesPoints,selectedEnergyType)}));countryListBox.addEventListener("change",(()=>{calculateValues(),curveTitle.innerText=curveEnergyType[selectedEnergyType].title,"consumption"===selectedEnergyType?drawChart(consumptionPoints,selectedEnergyType):"production"===selectedEnergyType?drawChart(productionPoints,selectedEnergyType):drawChart(reservesPoints,selectedEnergyType)})),mapSvg.addEventListener("click",(()=>{calculateValues(),curveTitle.innerText=curveEnergyType[selectedEnergyType].title,"consumption"===selectedEnergyType?drawChart(consumptionPoints,selectedEnergyType):"production"===selectedEnergyType?drawChart(productionPoints,selectedEnergyType):drawChart(reservesPoints,selectedEnergyType)})),document.getElementById("map-deselect-btn").addEventListener("click",(()=>{calculateValues(),curveTitle.innerText=curveEnergyType[selectedEnergyType].title,"consumption"===selectedEnergyType?drawChart(consumptionPoints,selectedEnergyType):"production"===selectedEnergyType?drawChart(productionPoints,selectedEnergyType):drawChart(reservesPoints,selectedEnergyType)}))}